<?xml version="1.0" encoding="utf-8"?>
<ScriptDetails xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QStep_Main>
    <UserScript>
      <CodeEvent>
        <CodeKey>Mission</CodeKey>
        <Message xsi:type="LuaString" Value="OnLeaveQuestArea" />
        <SenderKey>ANY / ALL</SenderKey>
        <SenderValue xsi:type="LuaNil" />
      </CodeEvent>
      <Identifier Value="Leave_Cancel_Weather" />
      <Description />
      <Preconditions />
      <Operations>
        <Operation>
          <Name>Cancel Forced Weather</Name>
          <Version>1.0</Version>
          <Category>GAMEPLAY EFFECTS</Category>
          <Description>Ends a forced weather event.</Description>
          <EventFunctionTemplate>TppWeather.CancelForceRequestWeather()</EventFunctionTemplate>
          <EmbeddedChoosableValueSets />
          <Choices />
          <EmbeddedCommonDefinitions />
        </Operation>
      </Operations>
    </UserScript>
    <UserScript>
      <CodeEvent>
        <CodeKey>Mission</CodeKey>
        <Message xsi:type="LuaString" Value="OnTargetExtraction" />
        <SenderKey>ANY / ALL</SenderKey>
        <SenderValue xsi:type="LuaNil" />
      </CodeEvent>
      <Identifier Value="Extract_Cancel_Weather_If_Obj_Quota_Reached" />
      <Description />
      <Preconditions>
        <Precondition>
          <Name>Compare Number Values</Name>
          <Version>1.0</Version>
          <Category>COMPARISONS</Category>
          <Description>Compares two numbers. 
- 'qvars.Equals' returns true when Num1 and Num2 are the same value.
- 'qvars.NotEquals' returns true when Num1 and Num2 are not the same value.
- 'qvars.LessThan' returns true when Num1 is less than Num2.
- 'qvars.GreaterThan' returns true when Num1 is greater than Num2.
- 'qvars.LessThanOrEqualTo' returns true when Num1 is less than or equal to Num2.
- 'qvars.GreaterThanOrEqualTo' returns true when Num1 is greater than or equal to Num2.</Description>
          <EventFunctionTemplate>return |[1|TABLE_IDENTIFIER]|(|[2|NUMBER]|, |[3|NUMBER]|)</EventFunctionTemplate>
          <EmbeddedChoosableValueSets>
            <KeyValuesSet Key="Comparison Functions">
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Equals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="NotEquals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="LessThan" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="GreaterThan" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="LessThanOrEqualTo" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="GreaterThanOrEqualTo" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
            </KeyValuesSet>
          </EmbeddedChoosableValueSets>
          <Choices>
            <Choice>
              <Name>Comparison</Name>
              <Description>The comparison function.</Description>
              <ChoosableValueSetsFilter>
                <Key>Comparison Functions</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>false</AllowLiteral>
              <AllowUserVariable>false</AllowUserVariable>
              <Key>Comparison Functions</Key>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Equals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
            </Choice>
            <Choice>
              <Name>Num1</Name>
              <Description>The number on the left-hand side of the comparison.</Description>
              <ChoosableValueSetsFilter>
                <Key>Event Default Arguments</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Event Default Arguments</Key>
              <Value xsi:type="LuaVariable" Value="arg2">
                <AssignedTo xsi:type="LuaNumber" Value="-1" />
              </Value>
            </Choice>
            <Choice>
              <Name>Num2</Name>
              <Description>The number on the right-hand side of the comparison.</Description>
              <ChoosableValueSetsFilter>
                <Key>Event Default Arguments</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Number Literal</Key>
              <Value xsi:type="LuaNumber" Value="1" />
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="Equals" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue == thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="NotEquals" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue ~= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="LessThan" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &lt; thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="GreaterThan" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &gt; thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="LessThanOrEqualTo" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &lt;= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="GreaterThanOrEqualTo" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &gt;= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
          </EmbeddedCommonDefinitions>
        </Precondition>
        <Precondition>
          <Name>Compare Number Values</Name>
          <Version>1.0</Version>
          <Category>COMPARISONS</Category>
          <Description>Compares two numbers. 
- 'qvars.Equals' returns true when Num1 and Num2 are the same value.
- 'qvars.NotEquals' returns true when Num1 and Num2 are not the same value.
- 'qvars.LessThan' returns true when Num1 is less than Num2.
- 'qvars.GreaterThan' returns true when Num1 is greater than Num2.
- 'qvars.LessThanOrEqualTo' returns true when Num1 is less than or equal to Num2.
- 'qvars.GreaterThanOrEqualTo' returns true when Num1 is greater than or equal to Num2.</Description>
          <EventFunctionTemplate>return |[1|TABLE_IDENTIFIER]|(|[2|NUMBER]|, |[3|NUMBER]|)</EventFunctionTemplate>
          <EmbeddedChoosableValueSets>
            <KeyValuesSet Key="Comparison Functions">
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Equals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="NotEquals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="LessThan" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="GreaterThan" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="LessThanOrEqualTo" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="GreaterThanOrEqualTo" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
            </KeyValuesSet>
          </EmbeddedChoosableValueSets>
          <Choices>
            <Choice>
              <Name>Comparison</Name>
              <Description>The comparison function.</Description>
              <ChoosableValueSetsFilter>
                <Key>Comparison Functions</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>false</AllowLiteral>
              <AllowUserVariable>false</AllowUserVariable>
              <Key>Comparison Functions</Key>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Equals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
            </Choice>
            <Choice>
              <Name>Num1</Name>
              <Description>The number on the left-hand side of the comparison.</Description>
              <ChoosableValueSetsFilter>
                <Key>Event Default Arguments</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Event Default Arguments</Key>
              <Value xsi:type="LuaVariable" Value="arg3">
                <AssignedTo xsi:type="LuaNumber" Value="-1" />
              </Value>
            </Choice>
            <Choice>
              <Name>Num2</Name>
              <Description>The number on the right-hand side of the comparison.</Description>
              <ChoosableValueSetsFilter>
                <Key>Event Default Arguments</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Variable</Key>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Total_Targets" />
                </TableKeyPath>
                <EvaluatesTo>NUMBER</EvaluatesTo>
              </Value>
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="Equals" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue == thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="NotEquals" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue ~= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="LessThan" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &lt; thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="GreaterThan" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &gt; thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="LessThanOrEqualTo" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &lt;= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="GreaterThanOrEqualTo" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &gt;= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
          </EmbeddedCommonDefinitions>
        </Precondition>
      </Preconditions>
      <Operations>
        <Operation>
          <Name>Cancel Forced Weather</Name>
          <Version>1.0</Version>
          <Category>GAMEPLAY EFFECTS</Category>
          <Description>Ends a forced weather event.</Description>
          <EventFunctionTemplate>TppWeather.CancelForceRequestWeather()</EventFunctionTemplate>
          <EmbeddedChoosableValueSets />
          <Choices />
          <EmbeddedCommonDefinitions />
        </Operation>
      </Operations>
    </UserScript>
    <UserScript>
      <CodeEvent>
        <CodeKey>Mission</CodeKey>
        <Message xsi:type="LuaString" Value="OnTargetExtraction" />
        <SenderKey>ANY / ALL</SenderKey>
        <SenderValue xsi:type="LuaNil" />
      </CodeEvent>
      <Identifier Value="Extract_Cancel_Weather_If_Obj_Failed" />
      <Description />
      <Preconditions>
        <Precondition>
          <Name>Compare Number Values</Name>
          <Version>1.0</Version>
          <Category>COMPARISONS</Category>
          <Description>Compares two numbers. 
- 'qvars.Equals' returns true when Num1 and Num2 are the same value.
- 'qvars.NotEquals' returns true when Num1 and Num2 are not the same value.
- 'qvars.LessThan' returns true when Num1 is less than Num2.
- 'qvars.GreaterThan' returns true when Num1 is greater than Num2.
- 'qvars.LessThanOrEqualTo' returns true when Num1 is less than or equal to Num2.
- 'qvars.GreaterThanOrEqualTo' returns true when Num1 is greater than or equal to Num2.</Description>
          <EventFunctionTemplate>return |[1|TABLE_IDENTIFIER]|(|[2|NUMBER]|, |[3|NUMBER]|)</EventFunctionTemplate>
          <EmbeddedChoosableValueSets>
            <KeyValuesSet Key="Comparison Functions">
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Equals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="NotEquals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="LessThan" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="GreaterThan" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="LessThanOrEqualTo" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="GreaterThanOrEqualTo" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
            </KeyValuesSet>
          </EmbeddedChoosableValueSets>
          <Choices>
            <Choice>
              <Name>Comparison</Name>
              <Description>The comparison function.</Description>
              <ChoosableValueSetsFilter>
                <Key>Comparison Functions</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>false</AllowLiteral>
              <AllowUserVariable>false</AllowUserVariable>
              <Key>Comparison Functions</Key>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Equals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
            </Choice>
            <Choice>
              <Name>Num1</Name>
              <Description>The number on the left-hand side of the comparison.</Description>
              <ChoosableValueSetsFilter>
                <Key>Event Default Arguments</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Event Default Arguments</Key>
              <Value xsi:type="LuaVariable" Value="arg2">
                <AssignedTo xsi:type="LuaNumber" Value="-1" />
              </Value>
            </Choice>
            <Choice>
              <Name>Num2</Name>
              <Description>The number on the right-hand side of the comparison.</Description>
              <ChoosableValueSetsFilter>
                <Key>Event Default Arguments</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Number Literal</Key>
              <Value xsi:type="LuaNumber" Value="-1" />
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="Equals" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue == thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="NotEquals" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue ~= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="LessThan" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &lt; thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="GreaterThan" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &gt; thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="LessThanOrEqualTo" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &lt;= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="GreaterThanOrEqualTo" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &gt;= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
          </EmbeddedCommonDefinitions>
        </Precondition>
      </Preconditions>
      <Operations>
        <Operation>
          <Name>Cancel Forced Weather</Name>
          <Version>1.0</Version>
          <Category>GAMEPLAY EFFECTS</Category>
          <Description>Ends a forced weather event.</Description>
          <EventFunctionTemplate>TppWeather.CancelForceRequestWeather()</EventFunctionTemplate>
          <EmbeddedChoosableValueSets />
          <Choices />
          <EmbeddedCommonDefinitions />
        </Operation>
      </Operations>
    </UserScript>
    <UserScript>
      <CodeEvent>
        <CodeKey>Mission</CodeKey>
        <Message xsi:type="LuaString" Value="OnTargetDeath" />
        <SenderKey>ANY / ALL</SenderKey>
        <SenderValue xsi:type="LuaNil" />
      </CodeEvent>
      <Identifier Value="Dead_Cancel_Weather_If_Obj_Quota_Reached" />
      <Description />
      <Preconditions>
        <Precondition>
          <Name>Compare Number Values</Name>
          <Version>1.0</Version>
          <Category>COMPARISONS</Category>
          <Description>Compares two numbers. 
- 'qvars.Equals' returns true when Num1 and Num2 are the same value.
- 'qvars.NotEquals' returns true when Num1 and Num2 are not the same value.
- 'qvars.LessThan' returns true when Num1 is less than Num2.
- 'qvars.GreaterThan' returns true when Num1 is greater than Num2.
- 'qvars.LessThanOrEqualTo' returns true when Num1 is less than or equal to Num2.
- 'qvars.GreaterThanOrEqualTo' returns true when Num1 is greater than or equal to Num2.</Description>
          <EventFunctionTemplate>return |[1|TABLE_IDENTIFIER]|(|[2|NUMBER]|, |[3|NUMBER]|)</EventFunctionTemplate>
          <EmbeddedChoosableValueSets>
            <KeyValuesSet Key="Comparison Functions">
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Equals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="NotEquals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="LessThan" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="GreaterThan" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="LessThanOrEqualTo" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="GreaterThanOrEqualTo" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
            </KeyValuesSet>
          </EmbeddedChoosableValueSets>
          <Choices>
            <Choice>
              <Name>Comparison</Name>
              <Description>The comparison function.</Description>
              <ChoosableValueSetsFilter>
                <Key>Comparison Functions</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>false</AllowLiteral>
              <AllowUserVariable>false</AllowUserVariable>
              <Key>Comparison Functions</Key>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Equals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
            </Choice>
            <Choice>
              <Name>Num1</Name>
              <Description>The number on the left-hand side of the comparison.</Description>
              <ChoosableValueSetsFilter>
                <Key>Event Default Arguments</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Event Default Arguments</Key>
              <Value xsi:type="LuaVariable" Value="arg2">
                <AssignedTo xsi:type="LuaNumber" Value="-1" />
              </Value>
            </Choice>
            <Choice>
              <Name>Num2</Name>
              <Description>The number on the right-hand side of the comparison.</Description>
              <ChoosableValueSetsFilter>
                <Key>Event Default Arguments</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Number Literal</Key>
              <Value xsi:type="LuaNumber" Value="1" />
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="Equals" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue == thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="NotEquals" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue ~= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="LessThan" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &lt; thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="GreaterThan" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &gt; thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="LessThanOrEqualTo" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &lt;= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="GreaterThanOrEqualTo" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &gt;= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
          </EmbeddedCommonDefinitions>
        </Precondition>
        <Precondition>
          <Name>Compare Number Values</Name>
          <Version>1.0</Version>
          <Category>COMPARISONS</Category>
          <Description>Compares two numbers. 
- 'qvars.Equals' returns true when Num1 and Num2 are the same value.
- 'qvars.NotEquals' returns true when Num1 and Num2 are not the same value.
- 'qvars.LessThan' returns true when Num1 is less than Num2.
- 'qvars.GreaterThan' returns true when Num1 is greater than Num2.
- 'qvars.LessThanOrEqualTo' returns true when Num1 is less than or equal to Num2.
- 'qvars.GreaterThanOrEqualTo' returns true when Num1 is greater than or equal to Num2.</Description>
          <EventFunctionTemplate>return |[1|TABLE_IDENTIFIER]|(|[2|NUMBER]|, |[3|NUMBER]|)</EventFunctionTemplate>
          <EmbeddedChoosableValueSets>
            <KeyValuesSet Key="Comparison Functions">
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Equals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="NotEquals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="LessThan" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="GreaterThan" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="LessThanOrEqualTo" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="GreaterThanOrEqualTo" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
            </KeyValuesSet>
          </EmbeddedChoosableValueSets>
          <Choices>
            <Choice>
              <Name>Comparison</Name>
              <Description>The comparison function.</Description>
              <ChoosableValueSetsFilter>
                <Key>Comparison Functions</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>false</AllowLiteral>
              <AllowUserVariable>false</AllowUserVariable>
              <Key>Comparison Functions</Key>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Equals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
            </Choice>
            <Choice>
              <Name>Num1</Name>
              <Description>The number on the left-hand side of the comparison.</Description>
              <ChoosableValueSetsFilter>
                <Key>Event Default Arguments</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Event Default Arguments</Key>
              <Value xsi:type="LuaVariable" Value="arg3">
                <AssignedTo xsi:type="LuaNumber" Value="-1" />
              </Value>
            </Choice>
            <Choice>
              <Name>Num2</Name>
              <Description>The number on the right-hand side of the comparison.</Description>
              <ChoosableValueSetsFilter>
                <Key>Event Default Arguments</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Variable</Key>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Total_Targets" />
                </TableKeyPath>
                <EvaluatesTo>NUMBER</EvaluatesTo>
              </Value>
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="Equals" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue == thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="NotEquals" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue ~= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="LessThan" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &lt; thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="GreaterThan" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &gt; thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="LessThanOrEqualTo" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &lt;= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="GreaterThanOrEqualTo" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &gt;= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
          </EmbeddedCommonDefinitions>
        </Precondition>
      </Preconditions>
      <Operations>
        <Operation>
          <Name>Cancel Forced Weather</Name>
          <Version>1.0</Version>
          <Category>GAMEPLAY EFFECTS</Category>
          <Description>Ends a forced weather event.</Description>
          <EventFunctionTemplate>TppWeather.CancelForceRequestWeather()</EventFunctionTemplate>
          <EmbeddedChoosableValueSets />
          <Choices />
          <EmbeddedCommonDefinitions />
        </Operation>
      </Operations>
    </UserScript>
    <UserScript>
      <CodeEvent>
        <CodeKey>Mission</CodeKey>
        <Message xsi:type="LuaString" Value="OnTargetDeath" />
        <SenderKey>ANY / ALL</SenderKey>
        <SenderValue xsi:type="LuaNil" />
      </CodeEvent>
      <Identifier Value="Dead_Cancel_Weather_If_Obj_Failed" />
      <Description />
      <Preconditions>
        <Precondition>
          <Name>Compare Number Values</Name>
          <Version>1.0</Version>
          <Category>COMPARISONS</Category>
          <Description>Compares two numbers. 
- 'qvars.Equals' returns true when Num1 and Num2 are the same value.
- 'qvars.NotEquals' returns true when Num1 and Num2 are not the same value.
- 'qvars.LessThan' returns true when Num1 is less than Num2.
- 'qvars.GreaterThan' returns true when Num1 is greater than Num2.
- 'qvars.LessThanOrEqualTo' returns true when Num1 is less than or equal to Num2.
- 'qvars.GreaterThanOrEqualTo' returns true when Num1 is greater than or equal to Num2.</Description>
          <EventFunctionTemplate>return |[1|TABLE_IDENTIFIER]|(|[2|NUMBER]|, |[3|NUMBER]|)</EventFunctionTemplate>
          <EmbeddedChoosableValueSets>
            <KeyValuesSet Key="Comparison Functions">
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Equals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="NotEquals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="LessThan" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="GreaterThan" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="LessThanOrEqualTo" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="GreaterThanOrEqualTo" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
            </KeyValuesSet>
          </EmbeddedChoosableValueSets>
          <Choices>
            <Choice>
              <Name>Comparison</Name>
              <Description>The comparison function.</Description>
              <ChoosableValueSetsFilter>
                <Key>Comparison Functions</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>false</AllowLiteral>
              <AllowUserVariable>false</AllowUserVariable>
              <Key>Comparison Functions</Key>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Equals" />
                </TableKeyPath>
                <EvaluatesTo>NIL</EvaluatesTo>
              </Value>
            </Choice>
            <Choice>
              <Name>Num1</Name>
              <Description>The number on the left-hand side of the comparison.</Description>
              <ChoosableValueSetsFilter>
                <Key>Event Default Arguments</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Event Default Arguments</Key>
              <Value xsi:type="LuaVariable" Value="arg2">
                <AssignedTo xsi:type="LuaNumber" Value="-1" />
              </Value>
            </Choice>
            <Choice>
              <Name>Num2</Name>
              <Description>The number on the right-hand side of the comparison.</Description>
              <ChoosableValueSetsFilter>
                <Key>Event Default Arguments</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Number Literal</Key>
              <Value xsi:type="LuaNumber" Value="-1" />
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="Equals" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue == thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="NotEquals" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue ~= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="LessThan" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &lt; thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="GreaterThan" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &gt; thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="LessThanOrEqualTo" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &lt;= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="GreaterThanOrEqualTo" />
              <Value xsi:type="LuaFunction">
                <Parameters>
                  <Parameter Value="thisValue" />
                  <Parameter Value="thatValue" />
                </Parameters>
                <Template>  return thisValue &gt;= thatValue</Template>
                <PopulationValues />
              </Value>
            </qvarsDefinition>
          </EmbeddedCommonDefinitions>
        </Precondition>
      </Preconditions>
      <Operations>
        <Operation>
          <Name>Cancel Forced Weather</Name>
          <Version>1.0</Version>
          <Category>GAMEPLAY EFFECTS</Category>
          <Description>Ends a forced weather event.</Description>
          <EventFunctionTemplate>TppWeather.CancelForceRequestWeather()</EventFunctionTemplate>
          <EmbeddedChoosableValueSets />
          <Choices />
          <EmbeddedCommonDefinitions />
        </Operation>
      </Operations>
    </UserScript>
    <UserScript>
      <CodeEvent>
        <CodeKey>UI</CodeKey>
        <Message xsi:type="LuaString" Value="QuestAreaAnnounceLog" />
        <SenderKey>ANY / ALL</SenderKey>
        <SenderValue xsi:type="LuaNil" />
      </CodeEvent>
      <Identifier Value="Start_Weather_Event" />
      <Description />
      <Preconditions>
        <Precondition>
          <Name>True Only Once Flag</Name>
          <Version>1.0</Version>
          <Category>FLAGS</Category>
          <Description>Combines the Check Flag precondition with a Set Flag operation on the same identifier. 
Checks whether a string identifier has been flagged. If not, this precondition will return true AND flag the identifier. 
Thus, this precondition will only be fulfilled once, unless the flag is manually unset.</Description>
          <EventFunctionTemplate>if not qvars.CommonFlagTable[|[1|STRING,NUMBER]|] then
  qvars.CommonFlagTable[|[1|STRING,NUMBER]|] = true
  return true
end
return false</EventFunctionTemplate>
          <EmbeddedChoosableValueSets />
          <Choices>
            <Choice>
              <Name>Flag Name</Name>
              <Description>A flag ID value. Any string or number can be used as a flag identifier, even if it is being used for some other purpose, like a UI notification.</Description>
              <ChoosableValueSetsFilter />
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Variable</Key>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Init_Weather_Flag" />
                </TableKeyPath>
                <EvaluatesTo>STRING</EvaluatesTo>
              </Value>
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="CommonFlagTable" />
              <Value xsi:type="LuaTable">
                <Entries />
              </Value>
            </qvarsDefinition>
          </EmbeddedCommonDefinitions>
        </Precondition>
      </Preconditions>
      <Operations>
        <Operation>
          <Name>Force Weather</Name>
          <Version>1.0</Version>
          <Category>GAMEPLAY EFFECTS</Category>
          <Description>Forces a weather event. The event will continue unless manually cancelled.</Description>
          <EventFunctionTemplate>TppWeather.CancelForceRequestWeather()
local tempWeatherType = TppDefine.WEATHER[|[1|STRING]|]
local tempInterpTime = |[2|NUMBER]|
local tempFogParam = nil
if tempWeatherType == TppDefine.WEATHER.FOGGY then
  tempFogParam = { fogDensity = |[3|NUMBER]|/100,fogType = WeatherManager[|[4|STRING]|] }
end
TppWeather.ForceRequestWeather(tempWeatherType,tempInterpTime,tempFogParam)</EventFunctionTemplate>
          <EmbeddedChoosableValueSets>
            <KeyValuesSet Key="Weather Types">
              <Value xsi:type="LuaString" Value="SUNNY" />
              <Value xsi:type="LuaString" Value="CLOUDY" />
              <Value xsi:type="LuaString" Value="FOGGY" />
              <Value xsi:type="LuaString" Value="RAINY" />
              <Value xsi:type="LuaString" Value="POURING" />
              <Value xsi:type="LuaString" Value="SANDSTORM" />
            </KeyValuesSet>
            <KeyValuesSet Key="Fog Types">
              <Value xsi:type="LuaString" Value="FOG_TYPE_NORMAL" />
              <Value xsi:type="LuaString" Value="FOG_TYPE_PARASITE" />
              <Value xsi:type="LuaString" Value="FOG_TYPE_EERIE" />
            </KeyValuesSet>
          </EmbeddedChoosableValueSets>
          <Choices>
            <Choice>
              <Name>Weather Type</Name>
              <Description>The type of weather to play during the forced weather event.</Description>
              <ChoosableValueSetsFilter>
                <Key>Weather Types</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Weather Types</Key>
              <Value xsi:type="LuaString" Value="POURING" />
            </Choice>
            <Choice>
              <Name>Transition Time (~Seconds)</Name>
              <Description>The time it takes to fully transition to the weather event. Exact unit measurement is unknown, seemingly longer than seconds.</Description>
              <ChoosableValueSetsFilter />
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Number Literal</Key>
              <Value xsi:type="LuaNumber" Value="8" />
            </Choice>
            <Choice>
              <Name>Fog Density (Percent)</Name>
              <Description>The percent strength of the fog. Choose a value between 1 and 100. NOTE: This only applies if the Weather Type is FOGGY. This value has no effect otherwise.</Description>
              <ChoosableValueSetsFilter />
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Number Literal</Key>
              <Value xsi:type="LuaNumber" Value="10" />
            </Choice>
            <Choice>
              <Name>Fog Type</Name>
              <Description>The type of fog. NOTE: This only applies if the Weather Type is FOGGY. This value has no effect otherwise. There does not seem to be a difference between the NORMAL and EERIE options.</Description>
              <ChoosableValueSetsFilter>
                <Key>Fog Types</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Fog Types</Key>
              <Value xsi:type="LuaString" Value="FOG_TYPE_NORMAL" />
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions />
        </Operation>
        <Operation>
          <Name>Play Support Radio Call</Name>
          <Version>1.0</Version>
          <Category>SOUND EFFECTS</Category>
          <Description>Plays radio calls from one or more radio group IDs. This call can attempt to interrupt a support radio talk that is already playing, or wait to play it afterwards.
This operation also triggers a Radio -&gt; "Start" and Radio -&gt; "Finish" event, which can be handy for chaining logic, especially when a Delay Time is set for the call, without the need for a hidden timer.
Applying this operation onto a Radio -&gt; "Start" event, with a Group ID as the Sender filter, can effectively overwrite a specific radio call.
Notes on english dialogue for the group ids can be found here:
https://mgsvmoddingwiki.github.io/RadioIDToEnglishVoice/</Description>
          <EventFunctionTemplate>local |[1|ASSIGN_VARIABLE]| TppRadio.Play( |[1|VARIABLE,STRING,TABLE]|, { delayTime = |[2|NUMBER]|, isEnqueue = |[3|BOOLEAN]| } )</EventFunctionTemplate>
          <EmbeddedChoosableValueSets>
            <KeyValuesSet Key="Radio Calls">
              <Value xsi:type="LuaVariable" Value="ThatsTheTarget">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg2170" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ThatsOneOfTheTargets">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg2200" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ThatsOneTargetEliminateHim">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg0610" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TargetConfirmedDead">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg2390" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TargetDestroyed">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg3240" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TargetExtractionConfirmed">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg1560" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TargetEliminatedOntoTheNext">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg3830" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ThatCutDownEnemyMechForceStrength">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg3890" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ThatsTheTargetGetHimOut">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg3080" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ThatsTheTargetLooksInjured">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg0620" />
              </Value>
              <Value xsi:type="LuaVariable" Value="BadlyWoundedExtractByHeli">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg1210" />
              </Value>
              <Value xsi:type="LuaVariable" Value="KazSendsHeliForTarget">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg1750" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ThatsOptionalPrisoner">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg0810" />
              </Value>
              <Value xsi:type="LuaVariable" Value="APrisoner">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg1870" />
              </Value>
              <Value xsi:type="LuaVariable" Value="WhatsAPrisonerDoingHere">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg2060" />
              </Value>
              <Value xsi:type="LuaVariable" Value="PrisonerDoesntLookLikeTarget">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg2040" />
              </Value>
              <Value xsi:type="LuaVariable" Value="PrisonerMightKnowTarget">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg0320" />
              </Value>
              <Value xsi:type="LuaVariable" Value="PrisonerKnewTargetMarkOnMap">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg2230" />
              </Value>
              <Value xsi:type="LuaVariable" Value="WhyNotInterrogateForTarget">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg0300" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ObjectiveIsToEliminateNoMatterHow">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg0240" />
              </Value>
              <Value xsi:type="LuaVariable" Value="DestroyTheTargets">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg0370" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TargetSomewhereInAreaFindHim">
                <AssignedTo xsi:type="LuaString" Value="f1000_mprg0080" />
              </Value>
              <Value xsi:type="LuaVariable" Value="CombatVehicleNearbyTryToFindIt">
                <AssignedTo xsi:type="LuaString" Value="f1000_mprg0230" />
              </Value>
              <Value xsi:type="LuaVariable" Value="IntelTeamConfirmedEnemyVehicleWatchOut">
                <AssignedTo xsi:type="LuaString" Value="f1000_mprg0220" />
              </Value>
              <Value xsi:type="LuaVariable" Value="SideopObjectiveAroundThere">
                <AssignedTo xsi:type="LuaString" Value="f2000_rtrg1910" />
              </Value>
              <Value xsi:type="LuaVariable" Value="FindTheTarget">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg0580" />
              </Value>
              <Value xsi:type="LuaVariable" Value="EasierToSpotTargetFromHighUp">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg0410" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TargetSomewhereInThatArea">
                <AssignedTo xsi:type="LuaString" Value="f1000_mprg0190" />
              </Value>
              <Value xsi:type="LuaVariable" Value="EliminateTargetDontGetSpotted">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg0430" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TheEnemyDontLetThemSeeYou">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0770" />
              </Value>
              <Value xsi:type="LuaVariable" Value="CompletedWithoutSpottedPraise">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0360" />
              </Value>
              <Value xsi:type="LuaVariable" Value="AboutTimeForGuardShift">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0170" />
              </Value>
              <Value xsi:type="LuaVariable" Value="AlrightNowGetOut">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg1890" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ContinueOutOfAreaToComplete">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg2640" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ObjectiveCompleteExfilHotzone">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg2635" />
              </Value>
              <Value xsi:type="LuaVariable" Value="GreatWorkBoss">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg3590" />
              </Value>
              <Value xsi:type="LuaVariable" Value="OcelotMillerPraise">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg1640" />
              </Value>
              <Value xsi:type="LuaVariable" Value="HuhIsThatIt">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg1250" />
              </Value>
              <Value xsi:type="LuaVariable" Value="WOAHSTOPExtractTheTarget">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0116" />
              </Value>
              <Value xsi:type="LuaVariable" Value="HeyHoldOnWhatsGottenIntoYou">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg1150" />
              </Value>
              <Value xsi:type="LuaVariable" Value="GetHimOutOfThere">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg4260" />
              </Value>
              <Value xsi:type="LuaVariable" Value="GetHerOutOfThere">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg4270" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TreadCarefullyBoss">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0745" />
              </Value>
              <Value xsi:type="LuaVariable" Value="EyesOpenBoss">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0740" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ShhListen">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg2030" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TheySpottedYouGetAwayNow">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0800" />
              </Value>
              <Value xsi:type="LuaVariable" Value="WhatsThis">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0710" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ThatsAnEnemyUAV">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg4620" />
              </Value>
              <Value xsi:type="LuaVariable" Value="EnemyMustvePlantedMineWellSpotted">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg2130" />
              </Value>
              <Value xsi:type="LuaVariable" Value="WaitDidTheySetATrap">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg1120" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ForestWillProvideCover">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg2000" />
              </Value>
              <Value xsi:type="LuaVariable" Value="OneOfOurStaffCapturedForSideop">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg4040" />
              </Value>
              <Value xsi:type="LuaVariable" Value="HeyBossUseMissleLauncher">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg1430" />
              </Value>
              <Value xsi:type="LuaVariable" Value="BossDoYouHaveSniperRifle">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg1280" />
              </Value>
              <Value xsi:type="LuaVariable" Value="AvoidDirectApproach">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg1560" />
              </Value>
            </KeyValuesSet>
          </EmbeddedChoosableValueSets>
          <Choices>
            <Choice>
              <Name>Radio ID</Name>
              <Description>The radio group ID that will be played over the radio. Included preset IDs are wrapped in a variable names to provide context.
In addition to the presets, this choice also accepts strings and index-based tables. Refer to the wiki for useful radio strings: https://mgsvmoddingwiki.github.io/RadioIDToEnglishVoice/
A table with a list of strings will play each radio group message back-to-back, but it won't play the same string multiple times. 
The Sender (for both Start and Finish events) is the first radio string provided.</Description>
              <ChoosableValueSetsFilter>
                <Key>Radio Calls</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Radio Calls</Key>
              <Value xsi:type="LuaVariable" Value="TreadCarefullyBoss">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0745" />
              </Value>
            </Choice>
            <Choice>
              <Name>Delay Time (Seconds)</Name>
              <Description>Applies a delay before the radio call begins. This will also delay all enqueued radio calls as well, but any other scripts will continue to be executed, undelayed.</Description>
              <ChoosableValueSetsFilter />
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Number Literal</Key>
              <Value xsi:type="LuaNumber" Value="8" />
            </Choice>
            <Choice>
              <Name>Is Enqueued</Name>
              <Description>Enqueued calls will wait for other calls to finish before starting.</Description>
              <ChoosableValueSetsFilter />
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Boolean Literal</Key>
              <Value xsi:type="LuaBoolean" Value="true" />
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions />
        </Operation>
      </Operations>
    </UserScript>
  </QStep_Main>
  <Variables>
    <UserVariable Extrude="false">
      <Key xsi:type="LuaString" Value="Init_Weather_Flag" />
      <Value xsi:type="LuaString" Value="Init_Weather" />
    </UserVariable>
  </Variables>
</ScriptDetails>
<?xml version="1.0" encoding="utf-8"?>
<ScriptDetails xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QStep_Main>
    <UserScript>
      <CodeEvent>
        <CodeKey>Marker</CodeKey>
        <Message xsi:type="LuaString" Value="ChangeToEnable" />
        <SenderKey>ANY / ALL</SenderKey>
        <SenderValue xsi:type="LuaNil" />
      </CodeEvent>
      <Identifier Value="Target_Marked_By_Player" />
      <Description />
      <Preconditions>
        <Precondition>
          <Name>Check GameObjectId</Name>
          <Category>GAME OBJECTS</Category>
          <Description>Checks to see if a number matches a GameObjectId. Handy for checking event arguments.
This is the go-to method of checking if a game object is involved in an event, and much more reliable than filtering events with Senders.

- For most events, 'arg1' represents the GameObjectId that sent the event. 
- For GeoTraps and some Player messages, 'arg2' is the GameObjectId that entered/exited.
- Check Tex's notes on messages in InfLookup.lua for more details:
https://github.com/TinManTex/InfiniteHeaven/blob/master/tpp/gamedir-ih/GameDir/mod/modules/InfLookup.lua
Signatures that contain an argument with a argType="gameId" are GameObjectId numbers. Use this to check against them.</Description>
          <EventFunctionTemplate>local tempGameObjectIdVal = |[1|STRING,NUMBER]|
if type(tempGameObjectIdVal) == "string" then
  tempGameObjectIdVal = GetGameObjectId(tempGameObjectIdVal)
end
return tempGameObjectIdVal == |[2|NUMBER]|</EventFunctionTemplate>
          <EmbeddedChoosableValueSets />
          <Choices>
            <Choice>
              <Name>Game Object</Name>
              <Description>The Game Object (their string name or number GameObjectId) to be compared against.</Description>
              <ChoosableValueSetsFilter>
                <Key>Active Item Names (Targets)</Key>
                <Key>Active Item Names</Key>
                <Key>Animal Cluster Names (Targets)</Key>
                <Key>Animal Cluster Names</Key>
                <Key>Camera Names (Targets)</Key>
                <Key>Camera Names</Key>
                <Key>Enemy Names (Targets)</Key>
                <Key>Enemy Names (Enabled/Customized)</Key>
                <Key>Enemy Names</Key>
                <Key>GeoTrap Names</Key>
                <Key>Helicopter Names (Target)</Key>
                <Key>Helicopter Names</Key>
                <Key>Prisoner Names (Targets)</Key>
                <Key>Prisoner Names</Key>
                <Key>Dormant Item Names (Targets)</Key>
                <Key>Dormant Item Names</Key>
                <Key>UAV Names (Targets)</Key>
                <Key>UAV Names</Key>
                <Key>Heavy Vehicle Names (Targets)</Key>
                <Key>Heavy Vehicle Names</Key>
                <Key>Walker Gear Names (Targets)</Key>
                <Key>Walker Gear Names</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Variable</Key>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Target_Name" />
                </TableKeyPath>
                <EvaluatesTo>STRING</EvaluatesTo>
              </Value>
            </Choice>
            <Choice>
              <Name>GameObjectID</Name>
              <Description>The ID to compare against the game object. The precondition is fulfilled if they match.</Description>
              <ChoosableValueSetsFilter>
                <Key>Event Default Arguments</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Event Default Arguments</Key>
              <Value xsi:type="LuaVariable" Value="arg1">
                <AssignedTo xsi:type="LuaNumber" Value="-1" />
              </Value>
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions />
        </Precondition>
      </Preconditions>
      <Operations>
        <Operation>
          <Name>Set Flag</Name>
          <Category>FLAGS</Category>
          <Description>Flags an identifier. If the identifier is already flagged, this does nothing.</Description>
          <EventFunctionTemplate>qvars.CommonFlagTable[|[1|STRING,NUMBER]|] = true</EventFunctionTemplate>
          <EmbeddedChoosableValueSets />
          <Choices>
            <Choice>
              <Name>Flag Name</Name>
              <Description>A flag ID value. Any string or number can be used as a flag identifier, even if it is being used for some other purpose, like a UI notification.</Description>
              <ChoosableValueSetsFilter />
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Variable</Key>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Flag_TargetMarked" />
                </TableKeyPath>
                <EvaluatesTo>STRING</EvaluatesTo>
              </Value>
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="CommonFlagTable" />
              <Value xsi:type="LuaTable">
                <Entries />
              </Value>
            </qvarsDefinition>
          </EmbeddedCommonDefinitions>
        </Operation>
      </Operations>
    </UserScript>
    <UserScript>
      <CodeEvent>
        <CodeKey>GameObject</CodeKey>
        <Message xsi:type="LuaString" Value="Fulton" />
        <SenderKey>ANY / ALL</SenderKey>
        <SenderValue xsi:type="LuaNil" />
      </CodeEvent>
      <Identifier Value="Hostage_Start_Knowledge_Timer" />
      <Description />
      <Preconditions>
        <Precondition>
          <Name>Check GameObjectId</Name>
          <Category>GAME OBJECTS</Category>
          <Description>Checks to see if a number matches a GameObjectId. Handy for checking event arguments.
This is the go-to method of checking if a game object is involved in an event, and much more reliable than filtering events with Senders.

- For most events, 'arg1' represents the GameObjectId that sent the event. 
- For GeoTraps and some Player messages, 'arg2' is the GameObjectId that entered/exited.
- Check Tex's notes on messages in InfLookup.lua for more details:
https://github.com/TinManTex/InfiniteHeaven/blob/master/tpp/gamedir-ih/GameDir/mod/modules/InfLookup.lua
Signatures that contain an argument with a argType="gameId" are GameObjectId numbers. Use this to check against them.</Description>
          <EventFunctionTemplate>local tempGameObjectIdVal = |[1|STRING,NUMBER]|
if type(tempGameObjectIdVal) == "string" then
  tempGameObjectIdVal = GetGameObjectId(tempGameObjectIdVal)
end
return tempGameObjectIdVal == |[2|NUMBER]|</EventFunctionTemplate>
          <EmbeddedChoosableValueSets />
          <Choices>
            <Choice>
              <Name>Game Object</Name>
              <Description>The Game Object (their string name or number GameObjectId) to be compared against.</Description>
              <ChoosableValueSetsFilter>
                <Key>Active Item Names (Targets)</Key>
                <Key>Active Item Names</Key>
                <Key>Animal Cluster Names (Targets)</Key>
                <Key>Animal Cluster Names</Key>
                <Key>Camera Names (Targets)</Key>
                <Key>Camera Names</Key>
                <Key>Enemy Names (Targets)</Key>
                <Key>Enemy Names (Enabled/Customized)</Key>
                <Key>Enemy Names</Key>
                <Key>GeoTrap Names</Key>
                <Key>Helicopter Names (Target)</Key>
                <Key>Helicopter Names</Key>
                <Key>Prisoner Names (Targets)</Key>
                <Key>Prisoner Names</Key>
                <Key>Dormant Item Names (Targets)</Key>
                <Key>Dormant Item Names</Key>
                <Key>UAV Names (Targets)</Key>
                <Key>UAV Names</Key>
                <Key>Heavy Vehicle Names (Targets)</Key>
                <Key>Heavy Vehicle Names</Key>
                <Key>Walker Gear Names (Targets)</Key>
                <Key>Walker Gear Names</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Variable</Key>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Hostage_Name" />
                </TableKeyPath>
                <EvaluatesTo>STRING</EvaluatesTo>
              </Value>
            </Choice>
            <Choice>
              <Name>Number ID</Name>
              <Description>The ID to compare to the GameObjectId</Description>
              <ChoosableValueSetsFilter>
                <Key>Event Default Arguments</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Event Default Arguments</Key>
              <Value xsi:type="LuaVariable" Value="arg1">
                <AssignedTo xsi:type="LuaNumber" Value="-1" />
              </Value>
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions />
        </Precondition>
      </Preconditions>
      <Operations>
        <Operation>
          <Name>Start Hidden Timer</Name>
          <Category>TIMERS</Category>
          <Description>Begins a background countdown that sends a Timer -&gt; "Start" and Timer -&gt; "Finish" event.
This can be used for chaining events together on a delay, or creating a delayed event loop.
The name of the timer is the sender of the event.</Description>
          <EventFunctionTemplate>if GkEventTimerManager.IsTimerActive(|[1|STRING]|) then
  GkEventTimerManager.Stop(|[1|STRING]|)
end
GkEventTimerManager.Start(|[1|STRING]|, |[2|NUMBER]|)</EventFunctionTemplate>
          <EmbeddedChoosableValueSets />
          <Choices>
            <Choice>
              <Name>Sender</Name>
              <Description>The name of the timer. 
When the timer is finished, an event will occur. 
You can catch that event By creating a new script with a "Timer" StrCode, "Finish" message, and this value as the "Sender".</Description>
              <ChoosableValueSetsFilter />
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>String Literal</Key>
              <Value xsi:type="LuaString" Value="Timer_Knowledge" />
            </Choice>
            <Choice>
              <Name>Duration (Seconds)</Name>
              <Description>The number of seconds that the timer will count to before triggering the "Finish" event.</Description>
              <ChoosableValueSetsFilter />
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Number Literal</Key>
              <Value xsi:type="LuaNumber" Value="8" />
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions />
        </Operation>
      </Operations>
    </UserScript>
    <UserScript>
      <CodeEvent>
        <CodeKey>Timer</CodeKey>
        <Message xsi:type="LuaString" Value="Finish" />
        <SenderKey>String Literal</SenderKey>
        <SenderValue xsi:type="LuaString" Value="Timer_Knowledge" />
      </CodeEvent>
      <Identifier Value="Hostage_Give_Knowledge" />
      <Description />
      <Preconditions>
        <Precondition>
          <Name>True Only Once Flag</Name>
          <Category>FLAGS</Category>
          <Description>Combines the Check Flag precondition with a Set Flag operation on the same identifier. 
Checks whether a string identifier has been flagged. If not, this precondition will return true AND flag the identifier. 
Thus, this precondition will only be fulfilled once, unless the flag is manually unset.</Description>
          <EventFunctionTemplate>if not qvars.CommonFlagTable[|[1|STRING,NUMBER]|] then
  qvars.CommonFlagTable[|[1|STRING,NUMBER]|] = true
  return true
end
return false</EventFunctionTemplate>
          <EmbeddedChoosableValueSets />
          <Choices>
            <Choice>
              <Name>Flag Name</Name>
              <Description>A flag ID value. Any string or number can be used as a flag identifier, even if it is being used for some other purpose, like a UI notification.</Description>
              <ChoosableValueSetsFilter />
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Variable</Key>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Flag_TargetMarked" />
                </TableKeyPath>
                <EvaluatesTo>STRING</EvaluatesTo>
              </Value>
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions>
            <qvarsDefinition Extrude="false">
              <Key xsi:type="LuaString" Value="CommonFlagTable" />
              <Value xsi:type="LuaTable">
                <Entries />
              </Value>
            </qvarsDefinition>
          </EmbeddedCommonDefinitions>
        </Precondition>
      </Preconditions>
      <Operations>
        <Operation>
          <Name>Mark As Target</Name>
          <Category>USER INTERFACE</Category>
          <Description>Displays a Quest Target marker on the Game Object. 
Accepts both GameObjectIds and GameObject Names.

- For most events, 'arg1' represents the GameObjectId that sent the event. For GeoTraps, 'arg2' is the GameObjectId that entered/exited.
- This operation is purely visual and does not handle actual target logic.</Description>
          <EventFunctionTemplate>local tempGameObjectIdVal = |[1|STRING,NUMBER]|
if type(tempGameObjectIdVal) == "string" then
  tempGameObjectIdVal = GetGameObjectId(tempGameObjectIdVal)
end
TppMarker.EnableQuestTargetMarker(tempGameObjectIdVal)
TppSoundDaemon.PostEvent"sfx_s_enemytag_quest_tgt"</EventFunctionTemplate>
          <EmbeddedChoosableValueSets />
          <Choices>
            <Choice>
              <Name>Game Object</Name>
              <Description>The soldier, hostage, etc. to be visually marked as the target.</Description>
              <ChoosableValueSetsFilter>
                <Key>Event Default Arguments</Key>
                <Key>Animal Cluster Names (Targets)</Key>
                <Key>Animal Cluster Names</Key>
                <Key>Camera Names (Targets)</Key>
                <Key>Camera Names</Key>
                <Key>Enemy Names (Targets)</Key>
                <Key>Enemy Names (Enabled/Customized)</Key>
                <Key>Enemy Names</Key>
                <Key>Prisoner Names (Targets)</Key>
                <Key>Prisoner Names</Key>
                <Key>UAV Names (Targets)</Key>
                <Key>UAV Names</Key>
                <Key>Heavy Vehicle Names (Targets)</Key>
                <Key>Heavy Vehicle Names</Key>
                <Key>Walker Gear Names (Targets)</Key>
                <Key>Walker Gear Names</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>true</AllowLiteral>
              <AllowUserVariable>true</AllowUserVariable>
              <Key>Variable</Key>
              <Value xsi:type="LuaTableIdentifier" TableVariable="qvars">
                <TableKeyPath>
                  <Key xsi:type="LuaString" Value="Target_Name" />
                </TableKeyPath>
                <EvaluatesTo>STRING</EvaluatesTo>
              </Value>
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions />
        </Operation>
        <Operation>
          <Name>Play Generic Radio Call</Name>
          <Category>SOUND EFFECTS</Category>
          <Description>Immediately plays a radio call from a radio group ID.
Notes on english dialogue for the group ids can be found here:
https://mgsvmoddingwiki.github.io/RadioIDToEnglishVoice/</Description>
          <EventFunctionTemplate>local |[1|ASSIGN_VARIABLE]| TppRadio.Play(|[1|VARIABLE]|)</EventFunctionTemplate>
          <EmbeddedChoosableValueSets>
            <KeyValuesSet Key="Radio Calls">
              <Value xsi:type="LuaVariable" Value="ThatsTheTarget">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg2170" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ThatsOneOfTheTargets">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg2200" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ThatsOneTargetEliminateHim">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg0610" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TargetConfirmedDead">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg2390" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TargetDestroyed">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg3240" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TargetExtractionConfirmed">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg1560" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TargetEliminatedOntoTheNext">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg3830" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ThatCutDownEnemyMechForceStrength">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg3890" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ThatsTheTargetGetHimOut">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg3080" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ThatsTheTargetLooksInjured">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg0620" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ThatsOptionalPrisoner">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg0810" />
              </Value>
              <Value xsi:type="LuaVariable" Value="APrisoner">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg1870" />
              </Value>
              <Value xsi:type="LuaVariable" Value="BadlyWoundedExtractByHeli">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg1210" />
              </Value>
              <Value xsi:type="LuaVariable" Value="WhatsAPrisonerDoingHere">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg2060" />
              </Value>
              <Value xsi:type="LuaVariable" Value="PrisonerDoesntLookLikeTarget">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg2040" />
              </Value>
              <Value xsi:type="LuaVariable" Value="PrisonerMightKnowTarget">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg0320" />
              </Value>
              <Value xsi:type="LuaVariable" Value="PrisonerKnewTargetMarkOnMap">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg2230" />
              </Value>
              <Value xsi:type="LuaVariable" Value="WhyNotInterrogateForTarget">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg0300" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ObjectiveIsToEliminateNoMatterHow">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg0240" />
              </Value>
              <Value xsi:type="LuaVariable" Value="DestroyTheTargets">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg0370" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TargetSomewhereInAreaFindHim">
                <AssignedTo xsi:type="LuaString" Value="f1000_mprg0080" />
              </Value>
              <Value xsi:type="LuaVariable" Value="CombatVehicleNearbyTryToFindIt">
                <AssignedTo xsi:type="LuaString" Value="f1000_mprg0230" />
              </Value>
              <Value xsi:type="LuaVariable" Value="IntelTeamConfirmedEnemyVehicleWatchOut">
                <AssignedTo xsi:type="LuaString" Value="f1000_mprg0220" />
              </Value>
              <Value xsi:type="LuaVariable" Value="SideopObjectiveAroundThere">
                <AssignedTo xsi:type="LuaString" Value="f2000_rtrg1910" />
              </Value>
              <Value xsi:type="LuaVariable" Value="FindTheTarget">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg0580" />
              </Value>
              <Value xsi:type="LuaVariable" Value="EasierToSpotTargetFromHighUp">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg0410" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TargetSomewhereInThatArea">
                <AssignedTo xsi:type="LuaString" Value="f1000_mprg0190" />
              </Value>
              <Value xsi:type="LuaVariable" Value="EliminateTargetDontGetSpotted">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg0430" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TheEnemyDontLetThemSeeYou">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0770" />
              </Value>
              <Value xsi:type="LuaVariable" Value="CompletedWithoutSpottedPraise">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0360" />
              </Value>
              <Value xsi:type="LuaVariable" Value="AboutTimeForGuardShift">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0170" />
              </Value>
              <Value xsi:type="LuaVariable" Value="AlrightNowGetOut">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg1890" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ContinueOutOfAreaToComplete">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg2640" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ObjectiveCompleteExfilHotzone">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg2635" />
              </Value>
              <Value xsi:type="LuaVariable" Value="GreatWorkBoss">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg3590" />
              </Value>
              <Value xsi:type="LuaVariable" Value="OcelotMillerPraise">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg1640" />
              </Value>
              <Value xsi:type="LuaVariable" Value="HuhIsThatIt">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg1250" />
              </Value>
              <Value xsi:type="LuaVariable" Value="WOAHSTOPExtractTheTarget">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0116" />
              </Value>
              <Value xsi:type="LuaVariable" Value="HeyHoldOnWhatsGottenIntoYou">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg1150" />
              </Value>
              <Value xsi:type="LuaVariable" Value="GetHimOutOfThere">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg4260" />
              </Value>
              <Value xsi:type="LuaVariable" Value="GetHerOutOfThere">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg4270" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TreadCarefullyBoss">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0745" />
              </Value>
              <Value xsi:type="LuaVariable" Value="EyesOpenBoss">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0740" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ShhListen">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg2030" />
              </Value>
              <Value xsi:type="LuaVariable" Value="TheySpottedYouGetAwayNow">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0800" />
              </Value>
              <Value xsi:type="LuaVariable" Value="WhatsThis">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg0710" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ThatsAnEnemyUAV">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg4620" />
              </Value>
              <Value xsi:type="LuaVariable" Value="EnemyMustvePlantedMineWellSpotted">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg2130" />
              </Value>
              <Value xsi:type="LuaVariable" Value="WaitDidTheySetATrap">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg1120" />
              </Value>
              <Value xsi:type="LuaVariable" Value="ForestWillProvideCover">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg2000" />
              </Value>
              <Value xsi:type="LuaVariable" Value="OneOfOurStaffCapturedForSideop">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg4040" />
              </Value>
              <Value xsi:type="LuaVariable" Value="HeyBossUseMissleLauncher">
                <AssignedTo xsi:type="LuaString" Value="f1000_oprg1430" />
              </Value>
              <Value xsi:type="LuaVariable" Value="BossDoYouHaveSniperRifle">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg1280" />
              </Value>
              <Value xsi:type="LuaVariable" Value="AvoidDirectApproach">
                <AssignedTo xsi:type="LuaString" Value="f1000_esrg1560" />
              </Value>
            </KeyValuesSet>
          </EmbeddedChoosableValueSets>
          <Choices>
            <Choice>
              <Name>Radio Preset</Name>
              <Description>The radio group ID that will be played over the radio. Wrapped in a variable to provide context.</Description>
              <ChoosableValueSetsFilter>
                <Key>Radio Calls</Key>
              </ChoosableValueSetsFilter>
              <AllowUIEdit>true</AllowUIEdit>
              <AllowLiteral>false</AllowLiteral>
              <AllowUserVariable>false</AllowUserVariable>
              <Key>Radio Calls</Key>
              <Value xsi:type="LuaVariable" Value="PrisonerKnewTargetMarkOnMap">
                <AssignedTo xsi:type="LuaString" Value="f1000_rtrg2230" />
              </Value>
            </Choice>
          </Choices>
          <EmbeddedCommonDefinitions />
        </Operation>
      </Operations>
    </UserScript>
  </QStep_Main>
  <Variables>
    <UserVariable Extrude="false">
      <Key xsi:type="LuaString" Value="Flag_TargetMarked" />
      <Value xsi:type="LuaString" Value="TargetMarked" />
    </UserVariable>
    <UserVariable Extrude="false">
      <Key xsi:type="LuaString" Value="Target_Name" />
      <Value xsi:type="LuaString" Value="sol_quest_0000" />
    </UserVariable>
    <UserVariable Extrude="false">
      <Key xsi:type="LuaString" Value="Hostage_Name" />
      <Value xsi:type="LuaString" Value="Hostage_0" />
    </UserVariable>
  </Variables>
</ScriptDetails>